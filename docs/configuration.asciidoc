[[configuration]]
== Configuration

Configure the agent with `AgentConfiguration` in the agent's `start()` function.

// some config example that preferably is correct unlike mine
[source,swift]
----
let config =  AgentConfiguration()
config.collectorHost = "192.168.0.1"
config.collectorPort = 8200
config.collectorTLS = true
config.secretToken = "<secret token>"
Agent.start(with:config)
----

[discrete]
[[configuration-options]]
=== Configuration options


[discrete]
[[collectorHost]]
==== `collectorHost`

* *Type:* String
* *Default:* `127.0.0.1`
// * *Env:* ``

The APM Server host.

[discrete]
[[collectorPort]]
==== `collectorPort`

* *Type:* Int
* *Default:* `8200`
// * *Env:* ``

The APM Server port.

[discrete]
[[collectorTLS]]
==== `collectorTLS`
* *Type:* Bool
* *Default:* false

Flags whether the APM Server is secured with TLS.

[discrete]
[[secretToken]]
==== `secretToken`
* *Type:* String
* *Default:* nil
* *Env:* `OTEL_EXPORTER_OTLP_HEADERS`

Sets the secret token for connecting to an authenticated APM Server. If using the env-var, the whole header map must be define per https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md[OpenTelemetry Protocol Exporter Config] (e.g.: `OTEL_EXPORTER_OTLP_HEADERS="Authorization=bearer <secret token>"`)
