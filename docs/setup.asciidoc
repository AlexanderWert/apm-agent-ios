[[setup]]

== Requirement
This project requires Swift `5.3`, and is intended for use in Swift-base mobile apps.

:source-highlighter: coderay

== Set up the Agent

=== adding the Agent dependency
Add the Elastic APM iOS Agent to your Xcode project or your `Package.swift`.

Here are instructions for adding a https://developer.apple.com/documentation/swift_packages/adding_package_dependencies_to_your_app[package dependency] to a standard Xcode poject.

Details of adding dependencies to your Package.swift can be found on https://developer.apple.com/documentation/xcode/creating_a_standalone_swift_package_with_xcode#3578941['Add a Dependency on Another Swift Package'].
Below is a helpful code-snippet:

`package.swift`:
[source,swift,linenums,highlight=2;10]
----
Package(
    dependencies:[
        .package(name: "iOSAgent", url: "git@github.com:elastic/apm-agent-ios.git", .branch("main")),
    ],
  targets:[
    .target(
        name: "MyApp",
        dependencies: [
            .product(name: "iOSAgent", package: "iOSAgent")
        ]
    ),
])
----

=== initializing the agent
Once the Agent has been added as a dependency, it must be intialized.

If you're using `SwiftUI` to build your app add the following to your `App.swift`:

[source,swift,linenums,swift,highlight=2;7..10]
----
import SwiftUI
import iOSAgent

@main
struct MyApp: App {
    init() {
        var config = AgentConfiguration()
        config.collectorAddress = "127.0.0.1" // APM Server url or ip address
        config.collectorPort = 8200 // APM Server port number
        Agent.start(with: config)
    }
    var body: some Scene {
        WindowGroup {
            ContentView()
        }
    }
}
----

If you're not using `SwiftUI` you can alternatively add the same thing to your AppDelegate file:

`AppDelegate.swift`
[source,swift,linenums,swift,highlight=2;7..10]
----
import UIKit
import iOSAgent
@main
class AppDelegate: UIResponder, UIApplicationDelegate {
    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {
        var config = AgentConfiguration()
        config.collectorAddress = "127.0.0.1" // APM Server url or ip address
        config.collectorPort = 8200 // APM Server port number
        Agent.start(with: config)
        return true
    }
}
----